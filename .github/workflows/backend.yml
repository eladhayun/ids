name: IDS Backend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Format code check
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted. Please run 'go fmt ./...'"
            gofmt -s -l .
            exit 1
          fi

      - name: Run linter
        run: golangci-lint run

      - name: Run tests
        run: go test -v ./...

      - name: Build application
        run: go build -o bin/server ./cmd/server

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io/ids-backend
          tags: |
            type=sha,prefix={{branch}}-
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-gitops:
    name: Update GitOps Repository
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout GitOps repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/gitops
          token: ${{ secrets.GITOPS_PAT }}
          path: gitops

      - name: Update image tag in deployment
        run: |
          cd gitops/ids
          IMAGE_TAG="${GITHUB_REF_NAME}-${GITHUB_SHA::7}"
          sed -i "s|image: .*ids-backend:.*|image: ${{ secrets.ACR_REGISTRY_NAME }}.azurecr.io/ids-backend:${IMAGE_TAG}|g" deployment.yaml
          
      - name: Commit and push changes
        run: |
          cd gitops
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Update IDS backend image to ${GITHUB_SHA::7}" || echo "No changes to commit"
          git push
