{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/": {
            "get": {
                "description": "Get basic service information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "general"
                ],
                "summary": "Root endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/chat": {
            "post": {
                "description": "Send a conversation to the AI chatbot and get a response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Chat with AI",
                "parameters": [
                    {
                        "description": "Chat request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ChatResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ChatResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.ChatResponse"
                        }
                    }
                }
            }
        },
        "/api/healthz": {
            "get": {
                "description": "Get basic health status of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HealthResponse"
                        }
                    }
                }
            }
        },
        "/api/healthz/db": {
            "get": {
                "description": "Get database connectivity status and latency",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Database health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DBHealthResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/models.DBHealthResponse"
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "description": "Get paginated list of products from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get products",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ProductsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ChatRequest": {
            "description": "Chat request payload",
            "type": "object",
            "properties": {
                "conversation": {
                    "description": "Array of conversation messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConversationMessage"
                    }
                }
            }
        },
        "models.ChatResponse": {
            "description": "Chat response payload",
            "type": "object",
            "properties": {
                "error": {
                    "description": "Error message if any",
                    "type": "string",
                    "example": ""
                },
                "products": {
                    "description": "Product name to SKU mapping for link generation",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "response": {
                    "description": "AI response message",
                    "type": "string",
                    "example": "Hello! How can I help you today?"
                }
            }
        },
        "models.ConversationMessage": {
            "description": "Single message in a conversation",
            "type": "object",
            "properties": {
                "message": {
                    "description": "Message content",
                    "type": "string",
                    "example": "Hello, how can I help?"
                },
                "role": {
                    "description": "Message role (user, assistant, system)",
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "models.DBHealthResponse": {
            "description": "Database health check response",
            "type": "object",
            "properties": {
                "connected": {
                    "description": "Database connection status",
                    "type": "boolean",
                    "example": true
                },
                "error": {
                    "description": "Error message if any",
                    "type": "string",
                    "example": ""
                },
                "latency": {
                    "description": "Database ping latency",
                    "type": "string",
                    "example": "1ms"
                },
                "status": {
                    "description": "Health status",
                    "type": "string",
                    "example": "healthy"
                },
                "timestamp": {
                    "description": "Timestamp of the check",
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                }
            }
        },
        "models.HealthResponse": {
            "description": "Health check response",
            "type": "object",
            "properties": {
                "status": {
                    "description": "Health status",
                    "type": "string",
                    "example": "healthy"
                },
                "timestamp": {
                    "description": "Timestamp of the check",
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "version": {
                    "description": "Application version",
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "models.PaginationMeta": {
            "description": "Pagination information",
            "type": "object",
            "properties": {
                "has_next": {
                    "description": "Whether there is a next page",
                    "type": "boolean",
                    "example": true
                },
                "has_prev": {
                    "description": "Whether there is a previous page",
                    "type": "boolean",
                    "example": false
                },
                "limit": {
                    "description": "Items per page",
                    "type": "integer",
                    "example": 100
                },
                "page": {
                    "description": "Current page number",
                    "type": "integer",
                    "example": 1
                },
                "total_count": {
                    "description": "Total number of items",
                    "type": "integer",
                    "example": 500
                },
                "total_pages": {
                    "description": "Total number of pages",
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "models.Product": {
            "description": "Product information",
            "type": "object",
            "properties": {
                "description": {
                    "description": "Product description",
                    "type": "string",
                    "example": "Product description"
                },
                "id": {
                    "description": "Product ID",
                    "type": "integer",
                    "example": 1
                },
                "max_price": {
                    "description": "Maximum price",
                    "type": "string",
                    "example": "20.00"
                },
                "min_price": {
                    "description": "Minimum price",
                    "type": "string",
                    "example": "10.00"
                },
                "post_name": {
                    "description": "Product URL slug",
                    "type": "string",
                    "example": "sample-product"
                },
                "post_title": {
                    "description": "Product title",
                    "type": "string",
                    "example": "Sample Product"
                },
                "short_description": {
                    "description": "Short description",
                    "type": "string",
                    "example": "Short desc"
                },
                "sku": {
                    "description": "Product SKU",
                    "type": "string",
                    "example": "SKU123"
                },
                "stock_quantity": {
                    "description": "Stock quantity",
                    "type": "integer",
                    "example": 100
                },
                "stock_status": {
                    "description": "Stock status",
                    "type": "string",
                    "example": "instock"
                },
                "tags": {
                    "description": "Product tags",
                    "type": "string",
                    "example": "electronics,gadgets"
                }
            }
        },
        "models.ProductsResponse": {
            "description": "Paginated products response",
            "type": "object",
            "properties": {
                "data": {
                    "description": "List of products",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                },
                "pagination": {
                    "description": "Pagination metadata",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.PaginationMeta"
                        }
                    ]
                }
            }
        }
    }
}